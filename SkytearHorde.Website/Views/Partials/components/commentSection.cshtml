@using SkytearHorde.Business.Extensions;
@using SkytearHorde.Business.Services
@using SkytearHorde.Entities.Models.ViewModels;
@using Umbraco.Cms.Core.Services;
@inject MemberInfoService _memberInfoService
@model CommentComponentViewModel
@{
    var currentUserId = Context.User.Identity?.GetUserId<int?>();
}

<h2 class="text-base my-2">@Model.Comments.Length comments</h2>

@foreach (var comment in Model.Comments.OrderBy(it => it.CreatedAt))
{
    <div class="py-2 px-2 group hover:bg-gray-50" id="comment-@comment.Id">
        <div class="flex gap-4 items-baseline mb-0.5">
            <h3 class="text-base">@(_memberInfoService.GetName(comment.CreatedBy))</h3>
            <p>@comment.CreatedAt.DateOffsetHumanReadable()</p>

            @if (currentUserId == comment.CreatedBy)
            {
                <button class="group-hover:visible md:invisible js-open-modal" js-modal="modal-delete-@comment.Id">
                    <i class="ph-fill ph-trash"></i>
                </button>
            }
        </div>

        <p>@comment.Comment</p>
    </div>
}

<div class="mt-2">
    @if (currentUserId is null)
    {
        <p>You must be <a href="/login">logged in</a> to add comments.</p>
    }
    else
    {
        using (Html.BeginUmbracoForm("AddComment", Model.ControllerName))
        {
            <input type="hidden" name="SourceId" value="@Model.SourceId" />

            <div class="form-field">
                <label>Leave a comment</label>
                <textarea class="form-input h-32" name="Comment"></textarea>
            </div>

            <div>
                <button type="submit" class="btn">Submit</button>
            </div>
        }
    }
</div>

@foreach(var comment in Model.Comments.Where(it => it.CreatedBy == currentUserId)){
    <dialog id="modal-delete-@comment.Id" class="relative z-10" aria-labelledby="modal-title" role="dialog" aria-modal="true">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>

        @using (Html.BeginUmbracoForm("DeleteComment", Model.ControllerName, FormMethod.Post, new { @class = "fixed inset-0 z-10 w-screen overflow-y-auto" }))
        {
            <input type="hidden" name="sourceId" value="@Model.SourceId" />
            <input type="hidden" name="commentId" value="@comment.Id" />
            <div class="flex min-h-full items-center justify-center p-4 sm:p-0">
                <div class="relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg">
                    <div class="bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4">
                        <div class="sm:flex sm:items-start">
                            <div class="mt-3 sm:ml-4 sm:mt-0">
                                <h3 class="text-base font-semibold leading-6 text-gray-900">Delete comment</h3>
                                <div class="mt-2 mb-2">
                                    <p class="text-sm">Are you sure that you want to delete your comment?</p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="bg-gray-50 px-4 py-3 sm:flex sm:flex-row-reverse sm:px-6">
                        <button type="submit" class="inline-flex w-full justify-center rounded-md bg-red-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 sm:ml-3 sm:w-auto">Delete</button>
                        <button formmethod="dialog" class="mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto">Cancel</button>
                    </div>
                </div>
            </div>
        }
    </dialog>
}