@using SkytearHorde.Entities.Models.PostModels
@model PackViewModel
<dialog id="modal-cardPack" class="relative z-10" aria-labelledby="modal-title" role="dialog" aria-modal="true" @(!string.IsNullOrWhiteSpace(Model.ErrorMessage) ? "open" : "")>
    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>

    <form class="fixed inset-0 z-10 w-screen overflow-y-auto js-ajax-form-submit" asp-controller="Collection" asp-action="VerifyPack">
        <div class="flex min-h-full items-center justify-center p-4 sm:p-0">
            <div class="relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg">
                <div class="bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4">
                    <div class="sm:flex sm:items-start">
                        <div class="mt-3 sm:ml-4 sm:mt-0">
                            <h2 class="text-lg">Add a card pack</h2>
                            <p>Add the number (bottom-left) of your card to each of the inputs and we'll add them to your collection.</p>

                            @if (!string.IsNullOrWhiteSpace(Model.ErrorMessage))
                            {
                                <p class="text-red-600">@Model.ErrorMessage</p>
                            }
                            <div class="form-field">
                                <label for="setId" class="form-label"><b>Choose your set</b></label>
                                <select name="setId" id="setId" class="form-input px-1 py-1">
                                    @foreach (var set in Model.Sets)
                                    {
                                        <!option value="@set.Id" @(set.Id == Model.PostContent.SetId ? "selected" : string.Empty)>@set.Name</!option>
                                    }
                                </select>
                            </div>

                            @for (var i = 0; i < Model.PostContent.Items.Length; i++)
                            {
                                var item = Model.PostContent.Items[i];
                                <div class="flex align-center gap-2 mt-2">
                                    <input name="Items[@i].Id" class="form-input w-full" placeholder="@((i + 1).ToString("000"))" value="@item.Id" />
                                    <select name="Items[@i].VariantTypeId" class="form-input px-1 py-1">
                                        <!option @(item.VariantTypeId is null ? "selected" : string.Empty)>Normal</!option>
                                        @foreach (var variantType in Model.VariantTypes)
                                        {
                                            <!option @(item.VariantTypeId == variantType.Id ? "selected" : string.Empty) value="@variantType.Id">@variantType.DisplayName</!option>
                                        }
                                    </select>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="bg-gray-50 px-4 py-3 gap-2 sm:flex sm:flex-row-reverse sm:px-6">
                    <button formmethod="post" type="submit" onclick="this.closest('dialog').close()" class="mt-3 inline-flex w-full justify-center rounded-md bg-green-400 px-3 py-2 text-sm font-semibold text-gray shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-green-500 sm:mt-0 sm:w-auto">Confirm</button>
                    <button formmethod="dialog" type="button" onclick="this.closest('dialog').close()" class="mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto">Cancel</button>
                </div>
            </div>
        </div>
    </form>
</dialog>